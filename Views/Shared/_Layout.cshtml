@using Newtonsoft.Json
@using SampleApp.Helpers
@using SampleApp.ViewModels
@{
    Context.Session.TryGetValue(ConstantHelper.SESSION_USERID, out var userBytes);
    Context.Session.TryGetValue(ConstantHelper.SESSION_MENUS, out var menuBytes);

    var user = userBytes is null ? new() : JsonConvert.DeserializeObject<UsersLoginDto>(System.Text.Encoding.UTF8.GetString(userBytes));
    var menus = menuBytes is null ? [] : JsonConvert.DeserializeObject<List<MenuDto>>(System.Text.Encoding.UTF8.GetString(menuBytes));
    string currentUrl = Context.Request.Path;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    
    <div class="wrapper d-flex align-items-stretch">
        <nav id="sidebar">
            <div class="p-4 pt-5">
                <img class="img logo rounded-circle mb-5" src="~/images/logo.jpg" />
                <p>
                    Hi @user?.Username,
                    <a asp-area="" asp-controller="Login" asp-action="Index">
                        <i class="ace-icon fa fa-power-off green"></i>
                        Logout
                    </a>
                </p>
                @if (menus is not null && menus.Any())
                {
                    <ul class="list-unstyled components mb-5">
                        @foreach (var parentMenu in menus.Where(w => w.ParentId is null).OrderBy(o => o.Sequence))
                        {
                            if (menus.Exists(e => e.ParentId == parentMenu.Id))
                            {
                                <li class='@(menus.Exists(e => e.ParentId == parentMenu.Id && currentUrl.ToLower().Contains(e.Url.ToLower())) ? "active" : "")'>
                                    <a href="#@parentMenu.Name" role="button" data-bs-toggle="collapse" aria-expanded="false" class="dropdown-toggle" aria-controls="@parentMenu.Name">@parentMenu.Name</a>
                                    <ul class="collapse list-unstyled @(menus.Exists(e => e.ParentId == parentMenu.Id && currentUrl.ToLower().Contains(e.Url.ToLower())) ? "show" : "")" id="@parentMenu.Name">
                                        @foreach (var childMenu in menus.Where(w => w.ParentId == parentMenu.Id).OrderBy(o => o.Sequence))
                                        {
                                            <li class="@(currentUrl.ToLower().Contains(childMenu.Url.ToLower()) ? "active" : "")"><a href="@childMenu.Url">@childMenu.Name</a></li>
                                        }
                                    </ul>
                                </li>
                            }
                            else
                            {
                                <li class='@(parentMenu.Url.ToLower().Equals(currentUrl.ToLower()) || currentUrl.ToLower().Equals("/") ? "active" : "")'><a href="@parentMenu.Url">@parentMenu.Name</a></li>
                            }
                        }
                    </ul>
                }
                <div class="footer">
                    <p>
                        &copy; 2024 - Zeral Fordian
                    </p>
                </div>

            </div>
        </nav>

        <!-- Page Content  -->
        <div id="content">
            <button type="button" id="sidebarCollapse" class="btn btn-primary">
                <i class="fa fa-bars"></i>
                <span class="sr-only">Toggle Menu</span>
            </button>
            <section class="container-fluid mt-2">
                @RenderBody()
            </section>
        </div>
    </div>

    @Html.RenderPartialAsync("_ToastAlertPartial");

    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/3844aacea4.js" crossorigin="anonymous"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}